@model DisplayOnSamePageTesting.Models.ItemWithProperties

@{
    ViewBag.Title = "Index";
}

<h2>AJAX Index</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Id, "Item", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItemId", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Id)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Show" class="btn btn-default" id="show" />
            </div>
        </div>

        <div id="item" hidden>
            <hr />
            <h2>Display after selecting the item</h2>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript">

            function getItem(result) {
                $('#item').show()
                $('.item').remove()
                $('#item').append(

                    "<div class='item'><label>Editable Property&nbsp &nbsp</label><input type='text' /><br/><label>Constant Property&nbsp</label><input type='text' value='" + result.ConstantProperty + "' disabled /></div>"
                )
            }

            function showClicked(args) {
                var itemId = $('#ItemId').val()
                $.get("/ItemWithProperties/GetItem/" + itemId, getItem);
            }

            $().ready(function () {
                $("#show").click(showClicked);
            });

        </script>
    }
}